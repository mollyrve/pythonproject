import arcpy
from arcpy.sa import *
import pythonaddins
import numpy as np


class class_count(object):
    """Implementation for addin_storage_addin.tool (Tool)"""
    def __init__(self):
        self.enabled = True
        self.shape = "RECTANGLE"
    def onMouseDown(self, x, y, button, shift):
        pass
    def onMouseDownMap(self, x, y, button, shift):
        pass
    def onMouseUp(self, x, y, button, shift):
        pass
    def onMouseUpMap(self, x, y, button, shift):
        pass
    def onMouseMove(self, x, y, button, shift):
        pass
    def onMouseMoveMap(self, x, y, button, shift):
        pass
    def onDblClick(self):
        pass
    def onKeyDown(self, keycode, shift):
        pass
    def onKeyUp(self, keycode, shift):
        pass
    def deactivate(self):
        pass
    def onCircle(self, circle_geometry):
        pass
    def onLine(self, line_geometry):
        pass
    def onRectangle(self, rectangle_geometry):
        pass
        #get selected layer
        lyr = pythonaddins.GetSelectedTOCLayerOrDataFrame()
##check to see if layer is a raster 
        if isinstance(lyr, arcpy.mapping.Layer):
            if lyr.isRasterLayer:
#        #extract pixel values from rectangle 
                rectExtract= arcpy.sa.ExtractByRectangle(lyr,rectangle_geometry)
            #convert the rectangle to a numpy array 
                array=arcpy.RasterToNumPyArray(rectExtract)
#        #define what operation the rectangle should compute regarding the pixels
                total_ice =(array==3).sum()
                total_water = (array==2).sum()
#         #create solution message for the user 
                msg = '{0} pixels are ice, {1} pixels are water'.format(total_ice, total_water)
                pythonaddins.MessageBox(msg, 'Ice Abundance')
                # if the file is not a raster, print an error message 
            else:
            #print error message 
                pythonaddins.MessageBox('Not a raster layer', 'Error')
            #if the user fails to select a layer, print an error message 
        else: 
            pythonaddins.MessageBox('Please select a layer.', 'Error')
